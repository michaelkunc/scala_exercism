format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
9 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$1.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$2.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$3.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$4.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$5.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$6.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7.class
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs.class
binary dependencies:
2 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/michaelkunc/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Hamming$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
9 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$1
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$2
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$3
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$4
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$5
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$6
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$7
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1
used names:
23 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> <init>
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> FlatSpec
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Hamming
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> IllegalArgumentException
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> ManifestFactory
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Matchers
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> an
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> apply
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> be
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> classType
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> compute
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> convertToAnyShouldWrapper
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> in
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> it
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> org
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> package
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> pending
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> reflect
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> scala
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> scalatest
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> should
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> thrownBy
product stamps:
9 items
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$1.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$2.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$3.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$4.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$5.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$6.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7.class -> lastModified(1469050568000)
/Users/michaelkunc/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs.class -> lastModified(1469050568000)
source stamps:
1 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> hash(d1961362638692c082bd83c0a99c0a696125dad7)
binary stamps:
2 items
/Users/michaelkunc/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/michaelkunc/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
2 items
/Users/michaelkunc/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Int
/Users/michaelkunc/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> 

external apis:
1 items
Hamming$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAX6etEAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cG0V6Kx0AAZub3RpZnlzcQB+AAzzSDJ1dAAEd2FpdHNxAH4ADPCiGSJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMn4MaJ3QABmVxdWFsc3NxAH4ADHuzApB0AAxhc0luc3RhbmNlT2ZzcQB+AAxHRuSvdAAMc3luY2hyb25pemVkc3EAfgAM0C2MFnQADSRpc0luc3RhbmNlT2ZzcQB+AAy1KZcBdAAHY29tcHV0ZXNxAH4ADFjEvCp0AAlub3RpZnlBbGxzcQB+AAxtB8qcdAAMaXNJbnN0YW5jZU9mc3EAfgAMeqQ1qHQAAj09c3EAfgAMmSnic3QABWNsb25lc3EAfgAMYQzdHXQAB0hhbW1pbmdzcQB+AAzgsJN1dAAIdG9TdHJpbmdzcQB+AAxksCDFdAACIT1zcQB+AAy571OkdAAIZ2V0Q2xhc3NzcQB+AAz+PfrDdAACbmVzcQB+AAxxFzAmdAACZXFzcQB+AAyCPay0dAACIyNzcQB+AAyqaBGVdAAIZmluYWxpemVzcQB+AAy1JoQadAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ACd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFhzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQUwACWluaGVyaXRlZHEAfgBBTAAHcGFyZW50c3EAfgBBeHEAfgBdc3EAfgBYdXEAfgA8AAAAAHNxAH4AWHVxAH4APAAAAABzcQB+AFh1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AFx0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AFxzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHV0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHZzcQB+AGl0AANBbnlzcQB+AG1zcQB+AHB1cQB+AHMAAAACc3EAfgB1dAAFc2NhbGFxAH4AfHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFWCjyyp3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEMvVXNlcnMvbWljaGFlbGt1bmMvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUA1u10LWVOio/rtnX+4FdhjgRl/o=
source infos:
1 items
/Users/michaelkunc/exercism/scala/hamming/src/test/scala/hamming_test.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVgVnAOx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASC9Vc2Vycy9taWNoYWVsa3VuYy9leGVyY2lzbS9zY2FsYS9oYW1taW5nL3RhcmdldC9zY2FsYS0yLjExL3Rlc3QtY2xhc3Nlc3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVgo8uTh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASC9Vc2Vycy9taWNoYWVsa3VuYy9leGVyY2lzbS9zY2FsYS9oYW1taW5nL3RhcmdldC9zY2FsYS0yLjExL3Rlc3QtY2xhc3Nlc3QAAS8=
